import java.util.ArrayList;
import java.util.HashSet;
import java.util.TreeMap;
public class Wonder {
	private String defaultResource;
	private TreeMap<String, HashSet<Card>> cardsPlaced;
	private String name;
	private TreeMap<String, Integer> resource;
	private String[] cardReq;
	private String [] wonderBenefits;
	private String []benefitChoices;
	private int partsBuilding;
	private boolean canAccessChoices;
	private String key;
	private int amount;
	public Wonder(String wonder)
	{
		resource = new TreeMap<String, Integer>();
		defaultResource = "";
		cardsPlaced = new TreeMap<String, HashSet<Card>>();
		cardsPlaced.put("Yellow", new HashSet<Card>());
		cardsPlaced.put("Blue", new HashSet<Card>());
		cardsPlaced.put("Red", new HashSet<Card>());
		cardsPlaced.put("Purple", new HashSet<Card>());
		cardsPlaced.put("Brown", new HashSet<Card>());
		cardsPlaced.put("Gray", new HashSet<Card>());
		String []temp = wonder.split("/");
		name = temp[0];
		defaultResource += decodeAndAddResourceBeginning(temp[1]);
		wonderBenefits = decode2(temp[3]);
		partsBuilding = 0;
		cardReq =decode2(temp[2]);
		canAccessChoices = false;
	} 
	public String[] getCardReq ()
	{
		return cardReq;
	}
	public void benefitChoice(int choice)
	{
		if(!canAccessChoices)
			return;
		if(key==null)
		{
			if(resource.containsKey(benefitChoices[choice]))
				resource.put(benefitChoices[choice], resource.get(benefitChoices[choice])+(Integer.parseInt(benefitChoices[choice+1])));
			else
				resource.put(benefitChoices[choice], Integer.parseInt(benefitChoices[choice+1]));
			key = benefitChoices[choice];
			amount = Integer.parseInt(benefitChoices[choice+1]);
		}
		else
			resource.put(key, amount);
			
	}
	public boolean buildWonder(boolean traded) {
		if(!traded)
		{
			boolean build = true;
			TreeMap<String, Integer> temp= new TreeMap<String, Integer>();
			int z = Integer.parseInt(cardReq[partsBuilding+1]);
			temp.put(cardReq[partsBuilding], z);
			/*for(int i =0; i<cardReq.length; i++)
			{
				if(i%2!=0) {
					temp.put(cardReq[i-1], Integer.parseInt(cardReq[i]));
					if(!(resource.get(cardReq[i-1])>= temp.get(cardReq[i-1])))
							build = false;
				}
			}*/
			if(!(resource.get(cardReq[partsBuilding])>= temp.get(cardReq[partsBuilding])))
				build = false;
			if(build)
			{
				partsBuilding++;
				if(benefitChoices[partsBuilding-1].contains("."))
				{
					canAccessChoices= true;
					
				}
				else {
					String a[] = wonderBenefits[partsBuilding-1].split(" ");
					for(int i = 0; i<a.length;i+=2)
					{
						if(resource.containsKey(a[i]))
							resource.put(a[i], resource.get(a[i])+(Integer.parseInt(a[i+1])));
						else
							resource.put(a[i], Integer.parseInt(a[i+1]));
					}
				}
			}
			return build;
		}
		else
		{
			partsBuilding++;
			if(benefitChoices[partsBuilding-1].contains("."))
			{
				canAccessChoices= true;
				
			}
			else {
				String a[] = wonderBenefits[partsBuilding-1].split(" ");
				for(int i = 0; i<a.length;i+=2)
				{
					if(resource.containsKey(a[i]))
						resource.put(a[i], resource.get(a[i])+(Integer.parseInt(a[i+1])));
					else
						resource.put(a[i], Integer.parseInt(a[i+1]));
				}
			}
		}
		return true;
	}
	public void playedCard(Card a)
	{
		HashSet<Card> oof = cardsPlaced.get(a.getColor());
		oof.add(a);
		cardsPlaced.put(a.getColor(), oof);
		decodeAndAddResource(a.getResource());
	}
	public String decodeAndAddResourceBeginning(String a)
	{
		String b[] = a.split(" ");
		for(int i = 0 ; i<b.length; i+=2)
		{
			if(b[i].compareTo("s")==0) {
				b[i] = "stone";
				resource.put(b[i], Integer.parseInt(b[i+1]));
			}
			else if(b[i].compareTo("w")==0) {
				b[i] = "wood";
				resource.put(b[i], Integer.parseInt(b[i+1]));
			}
			else if(b[i].compareTo("c")==0) {
				b[i] = "clay";
				resource.put(b[i], Integer.parseInt(b[1]));
			}
			else if(b[i].compareTo("o")==0) {
				b[i] = "ore";
				resource.put(b[i], Integer.parseInt(b[1]));
			}
			else if(b[i].compareTo("p")==0) {
				b[i] = "papyrus";
				resource.put(b[i], Integer.parseInt(b[1]));
			}
			else if(b[i].compareTo("l")==0) {
				b[i] = "loom";
				resource.put(b[i], Integer.parseInt(b[1]));
			}
			else if(b[i].compareTo("g")==0) {
				b[i] = "glass";
				resource.put(b[i], Integer.parseInt(b[1]));
			}
			else if(b[i].compareTo("t")==0) {
				b[i] = "tablet";
				resource.put(b[i], Integer.parseInt(b[1]));
			}
			else if(b[i].compareTo("st")==0) {
				b[i] = "sextant";
				resource.put(b[i], Integer.parseInt(b[1]));
			}
			else if(b[i].compareTo("gr")==0) {
				b[i] = "gear";
				resource.put(b[i], Integer.parseInt(b[1]));
			}
			else if(b[i].compareTo("vp")==0) {
				b[i] = "VictoryPoints";
				resource.put(b[i], Integer.parseInt(b[1]));
			}
			else if(b[i].compareTo("mp")==0) {
				b[i] = "MilitaryPoints";
				resource.put(b[i], Integer.parseInt(b[1]));
			}
		}
		String returner="";
		for(int i = 0 ; i<b.length; i++)
		{
			returner +=(b[i]+" ");
		}
			return returner;
	}
	
	public String decodeAndAddResource(String a)
	{
//		if(a.contains("."))
	//	{
			String d[] = a.split(" ");
			String[]c;
			String[]b;
			ArrayList<String> resources= new ArrayList<>();
			for(int i = 0 ; i<d.length; i++)
			{
				if(d[i].contains("."))
				{
					c = d[i].split(".");
					resources.add(c[0]);
					resources.add(c[1]);
					//String []c= a.split(".");
					/*for(int k = 0; k<c.length; k++)
					{
						
					}*/
					//String d[] = c[0].split(" ");
					//b[i] = d[d.length-1];*/
				}
				else
					resources.add(d[i]);
			}
			b = new String[resources.size()];
			for(int i = 0; i<resources.size();i++)
			{
				d[i] = resources.get(i);
			}
			for(int i = 0 ; i<b.length; i+=2)
			{
				if(b[i].compareTo("s")==0) {
					b[i] = "stone";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[i+1])));
					else
						resource.put(b[i], Integer.parseInt(b[i+1]));
				}
				else if(b[i].compareTo("w")==0) {
					b[i] = "wood";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[i+1])));
					else
						resource.put(b[i], Integer.parseInt(b[i+1]));
				}
				else if(b[i].compareTo("c")==0) {
					b[i] = "clay";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[1])));
					else
						resource.put(b[i], Integer.parseInt(b[1]));
				}
				else if(b[i].compareTo("o")==0) {
					b[i] = "ore";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[1])));
					else
						resource.put(b[i], Integer.parseInt(b[1]));
				}
				else if(b[i].compareTo("p")==0) {
					b[i] = "papyrus";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[1])));
					else
						resource.put(b[i], Integer.parseInt(b[1]));
				}
				else if(b[i].compareTo("l")==0) {
					b[i] = "loom";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[1])));
					else
						resource.put(b[i], Integer.parseInt(b[1]));
				}
				else if(b[i].compareTo("g")==0) {
					b[i] = "glass";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[1])));
					else
						resource.put(b[i], Integer.parseInt(b[1]));
				}
				else if(b[i].compareTo("t")==0) {
					b[i] = "tablet";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[1])));
					else
						resource.put(b[i], Integer.parseInt(b[1]));
				}
				else if(b[i].compareTo("st")==0) {
					b[i] = "sextant";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[1])));
					else
						resource.put(b[i], Integer.parseInt(b[1]));
				}
				else if(b[i].compareTo("gr")==0) {
					b[i] = "gear";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[1])));
					else
						resource.put(b[i], Integer.parseInt(b[1]));
				}
				else if(b[i].compareTo("vp")==0) {
					b[i] = "VictoryPoints";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[1])));
					else
						resource.put(b[i], Integer.parseInt(b[1]));
				}
				else if(b[i].compareTo("mp")==0) {
					b[i] = "MilitaryPoints";
					if(resource.containsKey(b[i]))
						resource.put(b[i], (resource.get(b[i])+Integer.parseInt(b[1])));
					else
						resource.put(b[i], Integer.parseInt(b[1]));
				}
			}
			String returner="";
			for(int i = 0 ; i<b.length; i++)
			{
				returner +=(b[i]+" ");
			}
				return returner;
/*		}
		else
		{
			
		}*/
	}
	public String[] decodeBenefits(String b)
	{
		String a[] = b.split(" ");
		for(int i = 0 ; i<a.length; i++)
		{
			if(a[i].contains("."))
			{
				String [] resourceChoices = a[i].split(".");
				for(int k = 0; k<resourceChoices.length; k+=2)
				{
					resourceChoices[k] = decode(resourceChoices[k]);
				}
				a[i]=resourceChoices.toString();
			}
		}
		return a;
	}
	public String decode(String b)
	{
		String a="";
		if(b.compareTo("s")==0) {
			a += "stone";
		}
		else if(b.compareTo("w")==0) {
			a += "wood";
		}
		else if(b.compareTo("c")==0) {
			a += "clay";
		}
		else if(b.compareTo("o")==0) {
			a += "ore";
		}
		else if(b.compareTo("p")==0) {
			a += "papyrus";
		}
		else if(b.compareTo("l")==0) {
			a += "loom";
		}
		else if(b.compareTo("g")==0) {
			a += "glass";
		}
		else if(b.compareTo("t")==0) {
			a += "tablet";
		}
		else if(b.compareTo("st")==0) {
			a += "sextant";
		}
		else if(b.compareTo("gr")==0) {
			a += "gear";
		}
		else if(b.compareTo("vp")==0) {
			a += "VictoryPoints";
		}
		else if(b.compareTo("mp")==0) {
			a += "MilitaryPoints";
		}
		return a;
	}
	public String[] decode2(String b)
	{
		
		if(b.contains("."))
		{
			return decodeBenefits(b);
		}
		String []c = b.split(" ");
		String a[] = new String[c.length];
		for(int i = 0 ; i<c.length; i++) 
		{
			if(c[i].compareTo("s")==0) {
				a[i] = "stone";
			}
			else if(c[i].compareTo("w")==0) {
				a[i] = "wood";
			}
			else if(c[i].compareTo("c")==0) {
				a[i] = "clay";
			}
			else if(c[i].compareTo("o")==0) {
				a[i] = "ore";
			}
			else if(c[i].compareTo("p")==0) {
				a[i] = "papyrus";
			}
			else if(c[i].compareTo("l")==0) {
				a[i] = "loom";
			}
			else if(c[i].compareTo("g")==0) {
				a[i] = "glass";
			}
			else if(c[i].compareTo("t")==0) {
				a[i] = "tablet";
			}
			else if(c[i].compareTo("st")==0) {
				a[i] = "sextant";
			}
			else if(c[i].compareTo("gr")==0) {
				a[i] = "gear";
			}
			else if(c[i].compareTo("vp")==0) {
				a[i] = "VictoryPoints";
			}
			else if(c[i].compareTo("mp")==0) {
				a[i] = "MilitaryPoints";
			}
			else
				a[i] = c[i];
		}
		return a;
	}
	public TreeMap<String, Integer> getResources()
	{
	  return resource;
	}
	public TreeMap<String, HashSet<Card>> getCardsPlaced()
	{
	    return cardsPlaced;
	}
	public int getPartsBuilt()
	{
	    return partsBuilding;
	}
	
	public String getName() {
		return name;
	}
	public String toString(String[]a)
	{
		String b = "";
		for(int i =0; i<a.length; i++)
			b+=a[i]+" ";
		return b;
	}
	public String[] getWonderBenefits()
	{
		return wonderBenefits;
	}
}
