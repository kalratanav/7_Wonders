import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;
public class GraphicsClass extends JPanel implements MouseListener{
	private JFrame frame;
	private int x,y;
	private Player currentPlayer, previousPlayer, nextPlayer;
	public GraphicsClass(/*Player current, Player next, Player previouse*/) 
	{
		frame  = new JFrame("7 Wonders");
		frame.setSize(1920, 1080);
		frame.setVisible(true);
		frame.add(this);
		addMouseListener(this);
		setLayout(null);
	}
	public void paintComponent(Graphics g)
	{
		//draw rectangle
		g.drawRect(420, 755, 1080, 350);
		g.drawRect(0,0,960,125);
		g.drawRect(960,0,960,125);
		
		//age card back
		try {
			BufferedImage backOfCard = ImageIO.read(new File("Age1_Card.png")); // make if statement to display the correct age card
			g.drawImage(backOfCard, 20, 725, frame);
		} catch (IOException e1) {}
		
		//current players wonders
		try {
			BufferedImage wonder1 = ImageIO.read(new File("Gizah"+"_wonder1.PNG"));
			BufferedImage wonder2 = ImageIO.read(new File("Gizah"+"_wonder2.PNG"));
			BufferedImage wonder3 = ImageIO.read(new File("Gizah"+"_wonder3.PNG"));
			BufferedImage resource = ImageIO.read(new File("Gizah" + "_resource.png"));
			g.drawImage(wonder1, 525, 695, frame);
			g.drawImage(wonder2, 840, 695, frame);
			g.drawImage(wonder3, 1155, 695, frame);
			g.drawImage(resource, 450, 718, frame);
		} catch (IOException e) {}
		
		//Display coins
		try {
			BufferedImage coin = ImageIO.read(new File("Coin.PNG"));
			g.drawImage(coin, 600, 636, frame);
		} catch (IOException e) {}
		g.setFont(new Font("TimesRoman", Font.PLAIN, 45));
		g.drawString("x1", 676, 690);//gets number of coins
		
		//Victory point Display
		try {
			BufferedImage victoryPoint = ImageIO.read(new File("Victory_Point.png"));
			g.drawImage(victoryPoint, 915, 622, frame);
		} catch (IOException e) {}
		g.setFont(new Font("TimesRoman", Font.PLAIN, 45));
		g.drawString("x1", 995, 690);
		
		//Military point Display
		try {
			BufferedImage militaryP = ImageIO.read(new File("Military_Point.png"));
			g.drawImage(militaryP, 1230, 625, frame);
		} catch (IOException e) {}
		g.setFont(new Font("TimesRoman", Font.PLAIN, 45));
		g.drawString("x1", 1306, 690);
				
		//Display Victory tokens
		try {
			BufferedImage victoryT = ImageIO.read(new File("Victory_Token.png"));
			g.drawImage(victoryT, 1075, 653,frame);
		} catch (IOException e) {}
		g.setFont(new Font("TimesRoman", Font.PLAIN, 25));
		g.drawString("x1", 1115, 690); //gets number of victory points
		
		//Display Defeat tokens
				try {
					BufferedImage defeatT = ImageIO.read(new File("Defeat_Token.png"));
					g.drawImage(defeatT, 750, 653,frame);
				} catch (IOException e) {}
				g.setFont(new Font("TimesRoman", Font.PLAIN, 25));
				g.drawString("x1", 800, 690); //gets number of victory points
				
		//next player stuff
		//name
		g.setFont(new Font("TimesRoman", Font.PLAIN, 50));
		g.drawString("Player N", 350,40);
		
		g.setColor(Color.GREEN);
		g.fillRect(225, 55, 425, 70);
		
		g.setFont(new Font("TimesRoman", Font.PLAIN, 25));
		g.setColor(Color.BLACK);
		g.drawString("Click Here to View Player N", 285, 90);
		
		
		
		//loading next Player window
		if(x >= 225 && x <= 650 && y >= 55 && y <= 123) {
			/*
			JFrame nextFrame  = new JFrame("(Insert Next Player)");
			nextFrame.setSize(1080, 720);
			nextFrame.setVisible(true);
			nextFrame.add(this.loadNextPlayer(g));
			setLayout(null);
			
			g.drawString("HELLO", 100, 100);
			*/
			new NextPlayerWindow();
		}
		
	}
	
	public void loadNextPlayer(Graphics g) {
		
	}
	public void mouseClicked(MouseEvent e) {
		x = e.getX();
		y = e.getY();
		System.out.println(x + " " + y);
		//Runner.play();
		
		repaint();	
	}
	
	public void setCurrentPlayer(Player p) {
		currentPlayer = p;
	}
	
	public void setNextPlayer(Player p) {
		nextPlayer = p;
	}

	public void setPreviousPlayer(Player p) {
		previousPlayer = p;
	}
	
	public void mouseEntered(MouseEvent e) {
		
	}
	public void mouseExited(MouseEvent e) {
		
	}
	public void mousePressed(MouseEvent e) {
		
	}
	public void mouseReleased(MouseEvent e) {
		
	}
	
}


